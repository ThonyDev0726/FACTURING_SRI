-- =========================================================================
-- PROCEDIMIENTOS EMPRESA
-- =========================================================================
CREATE PROCEDURE SELECT_EMPRESA()
BEGIN 
    SELECT 
        ID_EMPRESA,
        EMP_NOMBRE_COMERCIAL,
        EMP_RAZON_SOCIAL,
        EMP_RUC,
        EMP_MATRIZ,
        EMP_ESTABLECIMIENTO,
        EMP_COD_ESTABLECIMIENTO,
        EMP_PUNTO_EMISION,
        EMP_RESOLUCION_CONTRIB_ESPECIAL,
        EMP_NUM_AGENTE_RETENCION,
        EMP_LLEVAR_CONTABILIDAD,
        EMP_CONTRIBUYENTE_RIMPE,
        EMP_TOKEN
    FROM EMPRESA
    WHERE ID_EMPRESA = 1;
END;

CREATE PROCEDURE UPDATE_EMPRESA(
        IN ID_EMPRESA_V INT,
        IN EMP_NOMBRE_COMERCIAL_V VARCHAR(500),
        IN EMP_RAZON_SOCIAL_V VARCHAR(500),
        IN EMP_RUC_V VARCHAR(15),
        IN EMP_MATRIZ_V VARCHAR(500),
        IN EMP_ESTABLECIMIENTO_V VARCHAR(500),
        IN EMP_COD_ESTABLECIMIENTO_V INT,
        IN EMP_PUNTO_EMISION_V INT,
        IN EMP_RESOLUCION_CONTRIB_ESPECIAL_V INT,
        IN EMP_NUM_AGENTE_RETENCION_V INT,
        IN EMP_LLEVAR_CONTABILIDAD_V VARCHAR(5),
        IN EMP_CONTRIBUYENTE_RIMPE_V VARCHAR(5),
        IN EMP_TOKEN_V VARCHAR(55)
)
BEGIN 
    UPDATE EMPRESA SET
        EMP_NOMBRE_COMERCIAL = EMP_NOMBRE_COMERCIAL_V,
        EMP_RAZON_SOCIAL = EMP_RAZON_SOCIAL_V,
        EMP_RUC = EMP_RUC_V,
        EMP_MATRIZ = EMP_MATRIZ_V,
        EMP_ESTABLECIMIENTO = EMP_ESTABLECIMIENTO_V,
        EMP_COD_ESTABLECIMIENTO = EMP_COD_ESTABLECIMIENTO_V,
        EMP_PUNTO_EMISION = EMP_PUNTO_EMISION_V,
        EMP_RESOLUCION_CONTRIB_ESPECIAL = EMP_RESOLUCION_CONTRIB_ESPECIAL_V,
        EMP_NUM_AGENTE_RETENCION = EMP_NUM_AGENTE_RETENCION_V,
        EMP_LLEVAR_CONTABILIDAD = EMP_LLEVAR_CONTABILIDAD_V,
        EMP_CONTRIBUYENTE_RIMPE = EMP_CONTRIBUYENTE_RIMPE_V,
        EMP_TOKEN = EMP_TOKEN_V
    WHERE ID_EMPRESA = 1;
END;

-- =========================================================================
-- PROCEDIMIENTOS SUCURSAL
-- =========================================================================
CREATE PROCEDURE SELECT_SUCURSAL() 
BEGIN 
	SELECT
    ID_SUCURSAL,
	EMPRESA.EMP_NOMBRE_COMERCIAL,
    SUC_NOMBRE,
	SUC_ESTADO,
	SUC_TELEFONO,
	SUC_EMAIL,
	SUC_DIRECCION
	FROM SUCURSAL
    INNER JOIN EMPRESA ON SUCURSAL.FK_EMPRESA = 1;
END ;

CREATE PROCEDURE SELECT_ID_SUCURSAL(
    IN SUC_NOMBRE_V VARCHAR(55)
) 
BEGIN 
	SELECT
    ID_SUCURSAL	
	FROM SUCURSAL
    WHERE SUC_NOMBRE = SUC_NOMBRE_V;
END ;

CREATE PROCEDURE INSERT_SUCURSAL(    
    IN FK_EMPRESA_V INT,
    IN SUC_NOMBRE_V VARCHAR(55),
    IN SUC_TELEFONO_V VARCHAR(15),
    IN SUC_EMAIL_V VARCHAR(155),
    IN SUC_DIRECCION_V VARCHAR(255),
    IN SUC_ESTADO_V VARCHAR(255)
)
BEGIN
    INSERT INTO SUCURSAL (
        FK_EMPRESA,
        SUC_NOMBRE,
        SUC_TELEFONO,
        SUC_EMAIL,
        SUC_DIRECCION,
        SUC_ESTADO
    ) VALUES (
        FK_EMPRESA_V,
        SUC_NOMBRE_V,
        SUC_TELEFONO_V,
        SUC_EMAIL_V,
        SUC_DIRECCION_V,
        SUC_ESTADO_V
    );
END;

CREATE PROCEDURE UPDATE_SUCURSAL(
    IN ID_SUCURSAL_V INT,
    IN SUC_NOMBRE_V VARCHAR(55),
    IN SUC_TELEFONO_V VARCHAR(15),
    IN SUC_EMAIL_V VARCHAR(155),
    IN SUC_DIRECCION_V VARCHAR(255),
    IN SUC_ESTADO_V VARCHAR(15)
)
BEGIN
	UPDATE SUCURSAL SET 
		SUC_NOMBRE = SUC_NOMBRE_V,
		SUC_TELEFONO = SUC_TELEFONO_V,
        SUC_EMAIL = SUC_EMAIL_V,
        SUC_DIRECCION = SUC_DIRECCION_V,
        SUC_ESTADO = SUC_ESTADO_V 
    WHERE ID_SUCURSAL = ID_SUCURSAL_V;
END;

CREATE PROCEDURE DELETE_SUCURSAL(	
    IN ID_SUCURSAL_V INT
)
BEGIN
    DELETE FROM SUCURSAL WHERE ID_SUCURSAL = ID_SUCURSAL_V;
END;

-- =========================================================================
-- PROCEDIMIENTOS USUARIO
-- =========================================================================
CREATE PROCEDURE U_S_ID_USUARIO(IN USU_USUARIO_V VARCHAR(15)) 
BEGIN 
	SELECT ID_USUARIO FROM USUARIO WHERE USU_USUARIO = USU_USUARIO_V;
END ;

CREATE PROCEDURE U_S_USU_CLAVE(IN ID_USUARIO_V INT) 
BEGIN 
	SELECT USU_CLAVE FROM USUARIO WHERE ID_USUARIO = ID_USUARIO_V;
END ;

CREATE PROCEDURE U_S_USU_PARAMETRO(IN ID_USUARIO_V INT) 
BEGIN 
	SELECT USU_PARAMETRO FROM USUARIO WHERE ID_USUARIO = ID_USUARIO_V;
END ;

CREATE PROCEDURE U_S_USU_ESTADO(IN ID_USUARIO_V INT) 
BEGIN 
	SELECT USU_ESTADO FROM USUARIO WHERE ID_USUARIO = ID_USUARIO_V;
END ;

CREATE PROCEDURE SELCT_USU_ID_EMPLEADO(IN ID_USUARIO_V INT) 
BEGIN 
	SELECT FK_EMPLEADO FROM USUARIO WHERE ID_USUARIO = ID_USUARIO_V;
END ;

CREATE PROCEDURE SELECT_USU_ID_SUCURSAL(IN ID_USUARIO_V INT) 
BEGIN 
	SELECT FK_SUCURSAL FROM USUARIO WHERE ID_USUARIO = ID_USUARIO_V;
END ;

CREATE PROCEDURE A_S_ID_USUARIO(IN ID_USUARIO_V INT) 
BEGIN 
	SELECT 
        ID_USUARIO,
        SUCURSAL.SUC_NOMBRE,
        EMPLEADO.EMP_NOMBRES,
        EMPLEADO.EMP_APELLIDOS,
        USU_USUARIO,
        USU_CLAVE,
        USU_PARAMETRO,
        USU_ESTADO
    FROM USUARIO
    INNER JOIN SUCURSAL ON USUARIO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
    INNER JOIN EMPLEADO ON USUARIO.FK_EMPLEADO = EMPLEADO.ID_EMPLEADO
    WHERE ID_USUARIO = ID_USUARIO_V;
END;

CREATE PROCEDURE SELECT_USUARIO() 
BEGIN 
	SELECT
        ID_USUARIO,
        SUCURSAL.SUC_NOMBRE,
        EMPLEADO.EMP_NOMBRES,
        EMPLEADO.EMP_APELLIDOS,
        USU_USUARIO,
        USU_CLAVE,
        USU_PARAMETRO,
        USU_ESTADO
	FROM USUARIO 
    INNER JOIN SUCURSAL ON USUARIO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
    INNER JOIN EMPLEADO ON USUARIO.FK_EMPLEADO = EMPLEADO.ID_EMPLEADO;
END;

CREATE PROCEDURE INSERT_USUARIO(
    IN FK_SUCURSAL_V INT,
    IN FK_EMPLEADO_V INT,
    IN USU_USUARIO_V VARCHAR(255),
    admin
    IN USU_CLAVE_V VARCHAR(255),
    IN USU_PARAMETRO_V VARCHAR(15),
    IN USU_ESTADO_V VARCHAR(15),
    IN USU_CREACION_V DATE
)
BEGIN
    INSERT INTO USUARIO (
        FK_SUCURSAL,
        FK_EMPLEADO,
        USU_USUARIO,
        USU_CLAVE,
        USU_PARAMETRO,
        USU_ESTADO,
        USU_CREACION
    ) VALUES (
        FK_SUCURSAL_V,
        FK_EMPLEADO_V,
        USU_USUARIO_V,
        USU_CLAVE_V,
        USU_PARAMETRO_V,
        USU_ESTADO_V,
        USU_CREACION_V
    );
END;
CREATE PROCEDURE SELECT_USUARIO_BUSCAR(IN pcriterio VARCHAR(20), IN pbusqueda VARCHAR(20))
BEGIN
	IF pcriterio = "USU_USUARIO" THEN
        SELECT
        ID_USUARIO,
        SUCURSAL.SUC_NOMBRE,
        EMPLEADO.EMP_NOMBRES,
        EMPLEADO.EMP_APELLIDOS,
        USU_USUARIO,
        USU_CLAVE,
        USU_PARAMETRO,
        USU_ESTADO
        FROM USUARIO 
        INNER JOIN SUCURSAL ON USUARIO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        INNER JOIN EMPLEADO ON USUARIO.FK_EMPLEADO = EMPLEADO.ID_EMPLEADO
        WHERE USU_USUARIO  LIKE CONCAT("%",pbusqueda,"%");  
        
	ELSEIF pcriterio = "USU_PARAMETRO" THEN
	    SELECT
        ID_USUARIO,
        SUCURSAL.SUC_NOMBRE,
        EMPLEADO.EMP_NOMBRES,
        EMPLEADO.EMP_APELLIDOS,
        USU_USUARIO,
        USU_CLAVE,
        USU_PARAMETRO,
        USU_ESTADO
        FROM USUARIO 
        INNER JOIN SUCURSAL ON USUARIO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        INNER JOIN EMPLEADO ON USUARIO.FK_EMPLEADO = EMPLEADO.ID_EMPLEADO
        WHERE USU_PARAMETRO  LIKE CONCAT("%",pbusqueda,"%");  
        
    ELSEIF pcriterio = "USU_ESTADO" THEN
		SELECT
        ID_USUARIO,
        SUCURSAL.SUC_NOMBRE,
        EMPLEADO.EMP_NOMBRES,
        EMPLEADO.EMP_APELLIDOS,
        USU_USUARIO,
        USU_CLAVE,
        USU_PARAMETRO,
        USU_ESTADO
        FROM USUARIO 
        INNER JOIN SUCURSAL ON USUARIO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        INNER JOIN EMPLEADO ON USUARIO.FK_EMPLEADO = EMPLEADO.ID_EMPLEADO
        WHERE USU_ESTADO  LIKE CONCAT("%",pbusqueda,"%");   
        
	ELSE
        SELECT
        ID_USUARIO,
        SUCURSAL.SUC_NOMBRE,
        EMPLEADO.EMP_NOMBRES,
        EMPLEADO.EMP_APELLIDOS,
        USU_USUARIO,
        USU_CLAVE,
        USU_PARAMETRO,
        USU_ESTADO
        FROM USUARIO 
        INNER JOIN SUCURSAL ON USUARIO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        INNER JOIN EMPLEADO ON USUARIO.FK_EMPLEADO = EMPLEADO.ID_EMPLEADO;        		
	END IF; 
END;

CREATE PROCEDURE UPDATE_USUARIO(
    IN ID_USUARIO_V INT,
    IN FK_SUCURSAL_V INT,    
    IN USU_CLAVE_V VARCHAR(255),
    IN USU_PARAMETRO_V VARCHAR(15),
    IN USU_ESTADO_V VARCHAR(15)
)
BEGIN
	UPDATE USUARIO SET 
		FK_SUCURSAL = FK_SUCURSAL_V,
        USU_CLAVE = USU_CLAVE_V,
        USU_PARAMETRO = USU_PARAMETRO_V,
        USU_ESTADO = USU_ESTADO_V
    WHERE ID_USUARIO = ID_USUARIO_V;
END;

CREATE PROCEDURE UPDATE_CLAVE(
    IN ID_USUARIO_V INT,  
    IN USU_CLAVE_V VARCHAR(255)
)
BEGIN
	UPDATE USUARIO SET 
        USU_CLAVE = USU_CLAVE_V
    WHERE ID_USUARIO = ID_USUARIO_V;
END;

CREATE PROCEDURE DELETE_USUARIO(IN ID_USUARIO_V INT) 
BEGIN 
	DELETE FROM USUARIO WHERE ID_USUARIO = ID_USUARIO_V;
END ;

-- =========================================================================
-- PROCEDIMIENTOS EMPLEADOS
-- =========================================================================
CREATE PROCEDURE SELECT_EMPLEADO() 
BEGIN 
	SELECT
    ID_EMPLEADO,
    SUCURSAL.SUC_NOMBRE,
	EMP_NOMBRES,
	EMP_APELLIDOS,
    EMP_CEDULA ,
    EMP_EMAIL ,
    EMP_TELEFONO ,
    EMP_DIRECCION,
    EMP_ESTADO
	FROM EMPLEADO 
    INNER JOIN SUCURSAL ON EMPLEADO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL;
END;

CREATE PROCEDURE INSERT_EMPLEADO(
    IN FK_SUCURSAL_V INT,
	IN EMP_NOMBRES_V VARCHAR(155),
	IN EMP_APELLIDOS_V VARCHAR(155),
    IN EMP_CEDULA_V VARCHAR(15),
    IN EMP_EMAIL_V VARCHAR(155),
    IN EMP_TELEFONO_V VARCHAR(15),
    IN EMP_DIRECCION_V VARCHAR(255),
    IN EMP_CREACION_V DATE,
    IN EMP_ESTADO_V VARCHAR(15)
    ) 
BEGIN 
	INSERT INTO EMPLEADO (
        FK_SUCURSAL,
        EMP_NOMBRES,
        EMP_APELLIDOS,
        EMP_CEDULA ,
        EMP_EMAIL ,
        EMP_TELEFONO ,
        EMP_DIRECCION,
        EMP_CREACION,
        EMP_ESTADO
    ) VALUES (
        FK_SUCURSAL_V,
        EMP_NOMBRES_V,
        EMP_APELLIDOS_V,
        EMP_CEDULA_V ,
        EMP_EMAIL_V ,
        EMP_TELEFONO_V ,
        EMP_DIRECCION_V,
        EMP_CREACION_V,
        EMP_ESTADO_V
    );
END;

CREATE PROCEDURE SELECT_EMPLEADO_BUSCAR(IN pcriterio VARCHAR(20), IN pbusqueda VARCHAR(20))
BEGIN
	IF pcriterio = "EMP_NOMBRES" THEN
        SELECT
        ID_EMPLEADO,
        SUCURSAL.SUC_NOMBRE,
        EMP_NOMBRES,
        EMP_APELLIDOS,
        EMP_CEDULA ,
        EMP_EMAIL ,
        EMP_TELEFONO ,
        EMP_DIRECCION,
        EMP_ESTADO 
        FROM EMPLEADO 
        INNER JOIN SUCURSAL ON EMPLEADO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL 
        WHERE EMP_NOMBRES  LIKE CONCAT("%",pbusqueda,"%");  
        
	ELSEIF pcriterio = "EMP_APELLIDOS" THEN
	    SELECT
        ID_EMPLEADO,
        SUCURSAL.SUC_NOMBRE,
        EMP_NOMBRES,
        EMP_APELLIDOS,
        EMP_CEDULA ,
        EMP_EMAIL ,
        EMP_TELEFONO ,
        EMP_DIRECCION,
        EMP_ESTADO 
        FROM EMPLEADO 
        INNER JOIN SUCURSAL ON EMPLEADO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL 
        WHERE EMP_APELLIDOS  LIKE CONCAT("%",pbusqueda,"%");  
        
    ELSEIF pcriterio = "EMP_CEDULA" THEN
		SELECT
        ID_EMPLEADO,
        SUCURSAL.SUC_NOMBRE,
        EMP_NOMBRES,
        EMP_APELLIDOS,
        EMP_CEDULA ,
        EMP_EMAIL ,
        EMP_TELEFONO ,
        EMP_DIRECCION,
        EMP_ESTADO 
        FROM EMPLEADO 
        INNER JOIN SUCURSAL ON EMPLEADO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL 
        WHERE EMP_CEDULA  LIKE CONCAT("%",pbusqueda,"%");        
        
    ELSEIF pcriterio = "EMP_DIRECCION" THEN
		SELECT
        ID_EMPLEADO,
        SUCURSAL.SUC_NOMBRE,
        EMP_NOMBRES,
        EMP_APELLIDOS,
        EMP_CEDULA ,
        EMP_EMAIL ,
        EMP_TELEFONO ,
        EMP_DIRECCION,
        EMP_ESTADO 
        FROM EMPLEADO 
        INNER JOIN SUCURSAL ON EMPLEADO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL 
        WHERE EMP_DIRECCION  LIKE CONCAT("%",pbusqueda,"%");       
        
	ELSEIF pcriterio = "EMP_ESTADO" THEN
		SELECT
        ID_EMPLEADO,
        SUCURSAL.SUC_NOMBRE,
        EMP_NOMBRES,
        EMP_APELLIDOS,
        EMP_CEDULA ,
        EMP_EMAIL ,
        EMP_TELEFONO ,
        EMP_DIRECCION,
        EMP_ESTADO 
        FROM EMPLEADO 
        INNER JOIN SUCURSAL ON EMPLEADO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL 
        WHERE EMP_ESTADO LIKE CONCAT("%",pbusqueda,"%");
	ELSE
		SELECT
        ID_EMPLEADO,
        SUCURSAL.SUC_NOMBRE,
        EMP_NOMBRES,
        EMP_APELLIDOS,
        EMP_CEDULA ,
        EMP_EMAIL ,
        EMP_TELEFONO ,
        EMP_DIRECCION,
        EMP_ESTADO 
        FROM EMPLEADO 
        INNER JOIN SUCURSAL ON EMPLEADO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL;
	END IF; 
END;

CREATE PROCEDURE UPDATE_EMPLEADO(
    IN ID_EMPLEADO_V INT,
    IN FK_SUCURSAL_V INT,
	IN EMP_NOMBRES_V VARCHAR(155),
	IN EMP_APELLIDOS_V VARCHAR(155),
    IN EMP_CEDULA_V VARCHAR(15),
    IN EMP_EMAIL_V VARCHAR(155),
    IN EMP_TELEFONO_V VARCHAR(15),
    IN EMP_DIRECCION_V VARCHAR(255),
    IN EMP_ESTADO_V VARCHAR(15)
    ) 
BEGIN 
	UPDATE EMPLEADO SET
        FK_SUCURSAL = FK_SUCURSAL_V,
        EMP_NOMBRES = EMP_NOMBRES_V,
        EMP_APELLIDOS = EMP_APELLIDOS_V,
        EMP_CEDULA = EMP_CEDULA_V,
        EMP_EMAIL = EMP_EMAIL_V,
        EMP_TELEFONO = EMP_TELEFONO_V,
        EMP_DIRECCION = EMP_DIRECCION_V,
        EMP_ESTADO = EMP_ESTADO_V
    WHERE ID_EMPLEADO = ID_EMPLEADO_V;
END;

CREATE PROCEDURE DELETE_EMPLEADO(	
    IN ID_EMPLEADO_V INT
)
BEGIN
    DELETE FROM EMPLEADO WHERE ID_EMPLEADO = ID_EMPLEADO_V;
END;

-- =========================================================================
-- PROCEDIMIENTOS PERMISOS
-- =========================================================================
CREATE PROCEDURE ULTIMO_USUARIO()
BEGIN
    SELECT MAX(ID_USUARIO) FROM USUARIO;
END;

CREATE PROCEDURE INSERT_PERMISO(
    IN FK_USUARIO_V INT
)
BEGIN
    INSERT INTO PERMISO (
        FK_USUARIO,
        PER_CLIENTE,
        PER_EMPLEADO,
        PER_PROVEEDOR,
        PER_PRODUCTO,
        PER_FACTURACION,
        PER_NOTA_DEBITO,
        PER_NOTA_CREDITO,
        PER_REP_GENERALES,
        PER_REP_ESTADISTICOS,
        PER_REV_FACTURAS,
        PER_REV_NOT_CREDITO,
        PER_REV_NOT_DEBITO,
        PER_USUARIOS,
        PER_PERMISOS,
        PER_AJUSTES,
        PER_EMPRESA
    ) VALUES (
        FK_USUARIO_V,
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO",
        "SIN PERMISO"
    );
END;

CREATE PROCEDURE SELECT_PERMISOS_ID(in ID_USUARIO_V INT)
BEGIN
    SELECT              
        PER_CLIENTE,
        PER_EMPLEADO,
        PER_PROVEEDOR,
        PER_PRODUCTO,
        PER_FACTURACION,
        PER_NOTA_DEBITO,
        PER_NOTA_CREDITO,
        PER_REP_GENERALES,
        PER_REP_ESTADISTICOS,
        PER_REV_FACTURAS,
        PER_REV_NOT_CREDITO,
        PER_REV_NOT_DEBITO,
        PER_USUARIOS,
        PER_PERMISOS,
        PER_AJUSTES,
        PER_EMPRESA
    FROM PERMISO
    WHERE FK_USUARIO = ID_USUARIO_V; 
END;

CREATE PROCEDURE UPDATE_PERMISOS(
    IN ID_USUARIO_V INT,
    IN PER_CLIENTE_V VARCHAR(15),
    IN PER_EMPLEADO_V VARCHAR(15),
    IN PER_PROVEEDOR_V VARCHAR(15),
    IN PER_PRODUCTO_V VARCHAR(15),
    IN PER_FACTURACION_V VARCHAR(15),
    IN PER_NOTA_DEBITO_V VARCHAR(15),
    IN PER_NOTA_CREDITO_V VARCHAR(15),
    IN PER_REP_GENERALES_V VARCHAR(15),
    IN PER_REP_ESTADISTICOS_V VARCHAR(15),
    IN PER_REV_FACTURAS_V VARCHAR(15),
    IN PER_REV_NOT_CREDITO_V VARCHAR(15),
    IN PER_REV_NOT_DEBITO_V VARCHAR(15),
    IN PER_USUARIOS_V VARCHAR(15),
    IN PER_PERMISOS_V VARCHAR(15),
    IN PER_AJUSTES_V VARCHAR(15),
    IN PER_EMPRESA_V VARCHAR(15)
    )
BEGIN
    UPDATE PERMISO SET              
        PER_CLIENTE = PER_CLIENTE_V,
        PER_EMPLEADO = PER_EMPLEADO_V,
        PER_PROVEEDOR = PER_PROVEEDOR_V,
        PER_PRODUCTO = PER_PRODUCTO_V,
        PER_FACTURACION = PER_FACTURACION_V,
        PER_NOTA_DEBITO = PER_NOTA_DEBITO_V,
        PER_NOTA_CREDITO = PER_NOTA_CREDITO_V,
        PER_REP_GENERALES = PER_REP_GENERALES_V,
        PER_REP_ESTADISTICOS = PER_REP_ESTADISTICOS_V,
        PER_REV_FACTURAS = PER_REV_FACTURAS_V,
        PER_REV_NOT_CREDITO = PER_REV_NOT_CREDITO_V,
        PER_REV_NOT_DEBITO = PER_REV_NOT_DEBITO_V,
        PER_USUARIOS = PER_USUARIOS_V,
        PER_PERMISOS = PER_PERMISOS_V,
        PER_AJUSTES = PER_AJUSTES_V,
        PER_EMPRESA = PER_EMPRESA_V    
    WHERE FK_USUARIO = ID_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_CLIENTE(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT 
        PER_CLIENTE        
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_EMPLEADO(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT         
        PER_EMPLEADO        
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_PROVEEDOR(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT
        PER_PROVEEDOR
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_PRODUCTO(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT 
        PER_PRODUCTO
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_FACTURACION(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT 
        PER_FACTURACION
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_NOT_DEBITO(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT
        PER_NOTA_DEBITO
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_NOT_CREDITO(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT 
        PER_NOTA_CREDITO
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_REP_GENERAL(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT
        PER_REP_GENERALES
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_REP_ESTADISTICO(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT
        PER_REP_ESTADISTICOS
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_REV_FACTURAS(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT
        PER_REV_FACTURAS
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_REV_NOT_CREDITO(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT 
        PER_REV_NOT_CREDITO
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_REV_NOT_DEBITO(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT
        PER_REV_NOT_DEBITO
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_USUARIOS(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT 
        PER_USUARIOS
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_PERMISOS(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT 
        PER_PERMISOS
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_AJUSTES(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT         
        PER_AJUSTES
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

CREATE PROCEDURE ESTADO_EMPRESA(
    IN FK_USUARIO_V INT
)
BEGIN
    SELECT         
        PER_EMPRESA
    FROM PERMISO
    WHERE FK_USUARIO = FK_USUARIO_V; 
END;

-- =========================================================================
-- PROCEDIMIENTOS PRODUCTOS
-- =========================================================================
CREATE PROCEDURE SELECT_PRODUCTOS_ALL()
BEGIN
    SELECT 
        ID_PRODUCTO,
        PROVEEDOR.PRO_EMPRESA,
        SUCURSAL.SUC_NOMBRE,
        PRODUCTO.PRO_NOMBRE,
        PRO_DETALLE,
        PRO_CATEGORIA,
        PRO_COD_PRINC,
        PRO_COD_AUX,
        PRO_DETALLE_EXTRA,
        PRO_STOCK,
        PRO_PRECIO_FABRICA,
        PRO_GANANCIA,
        PRO_PVP,
        PRODUCTO.PRO_ESTADO,
        PRO_TIPO_IVA
    FROM PRODUCTO 
    INNER JOIN PROVEEDOR ON PRODUCTO.FK_PROVEEDOR = PROVEEDOR.ID_PROVEEDOR
    INNER JOIN SUCURSAL ON PRODUCTO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
    ORDER BY ID_PRODUCTO;
END;

CREATE PROCEDURE SELECT_PRODUCTO_ID( IN ID_PRODUCTO_V INT)
BEGIN
    SELECT 
        ID_PRODUCTO,    
        PRO_COD_PRINC,
        PRO_COD_AUX,
        PRO_STOCK
    FROM PRODUCTO 
    WHERE ID_PRODUCTO = ID_PRODUCTO_V;
END;

CREATE PROCEDURE SELECT_PRODUCTO_ID_CODIGO( IN PRO_COD_PRINC_V INT)
BEGIN
    SELECT 
        ID_PRODUCTO,    
        PRO_COD_PRINC,
        PRO_COD_AUX,
        PRO_STOCK
    FROM PRODUCTO 
    WHERE PRO_COD_PRINC = PRO_COD_PRINC_V;
END;

CREATE PROCEDURE SELECT_PRODUCTOS_LINEA()
BEGIN
    SELECT 
        ID_PRODUCTO,
        PROVEEDOR.PRO_EMPRESA,
        SUCURSAL.SUC_NOMBRE,
        PRODUCTO.PRO_NOMBRE,
        PRO_DETALLE,
        PRO_CATEGORIA,
        PRO_COD_PRINC,
        PRO_COD_AUX,
        PRO_DETALLE_EXTRA,
        PRO_STOCK,
        PRO_PRECIO_FABRICA,
        PRO_GANANCIA,
        PRO_PVP,
        PRO_TIPO_IVA_V
    FROM PRODUCTO 
    INNER JOIN PROVEEDOR ON PRODUCTO.FK_PROVEEDOR = PROVEEDOR.ID_PROVEEDOR
    INNER JOIN SUCURSAL ON PRODUCTO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
    WHERE PRODUCTO.PRO_ESTADO = 'EN LINEA';
END;

CREATE PROCEDURE INSERT_PRODUCTO(    
    IN FK_SUCURSAL_V INT,
    IN FK_PROVEEDOR_V INT,
    IN PRO_NOMBRE_V VARCHAR(155),
    IN PRO_DETALLE_V VARCHAR(155),
    IN PRO_CATEGORIA_V VARCHAR(55),
    IN PRO_COD_PRINC_V VARCHAR(55),
    IN PRO_COD_AUX_V VARCHAR(55),
    IN PRO_DETALLE_EXTRA_V VARCHAR(155),
    IN PRO_STOCK_V INT,
    IN PRO_PRECIO_FABRICA_V DECIMAL(10,2),
    IN PRO_GANANCIA_V INT,
    IN PRO_PVP_V DECIMAL(10,2),
    IN PRO_CREACION_V DATE,
    IN PRO_ESTADO_V VARCHAR(15),
    IN PRO_TIPO_IVA_V INT
)
BEGIN
    INSERT INTO PRODUCTO (
        FK_SUCURSAL,
        FK_PROVEEDOR,
        PRO_NOMBRE,
        PRO_DETALLE,
        PRO_CATEGORIA,
        PRO_COD_PRINC,
        PRO_COD_AUX,
        PRO_DETALLE_EXTRA,
        PRO_STOCK,
        PRO_PRECIO_FABRICA,
        PRO_GANANCIA,
        PRO_PVP,
        PRO_CREACION,
        PRO_ESTADO,
        PRO_TIPO_IVA
    ) VALUES (
        FK_SUCURSAL_V,
        FK_PROVEEDOR_V,
        PRO_NOMBRE_V,
        PRO_DETALLE_V,
        PRO_CATEGORIA_V,
        PRO_COD_PRINC_V,
        PRO_COD_AUX_V,
        PRO_DETALLE_EXTRA_V,
        PRO_STOCK_V,
        PRO_PRECIO_FABRICA_V,
        PRO_GANANCIA_V,
        PRO_PVP_V,
        PRO_CREACION_V,
        PRO_ESTADO_V,
        PRO_TIPO_IVA_V
    );
END;

CREATE PROCEDURE UPDATE_STOCK_PRODUCTO(
    IN ID_PRODUCTO_V INT,
    IN PRO_STOCK_V INT
)
BEGIN
    UPDATE PRODUCTO SET
    PRO_STOCK = PRO_STOCK_V
    WHERE ID_PRODUCTO = ID_PRODUCTO_V;
END;

CREATE PROCEDURE UPDATE_PRODUCTO(    
    IN ID_PRODUCTO_V INT,
    IN FK_SUCURSAL_V INT,
    IN FK_PROVEEDOR_V INT,
    IN PRO_NOMBRE_V VARCHAR(155),
    IN PRO_DETALLE_V VARCHAR(155),
    IN PRO_CATEGORIA_V VARCHAR(55),
    IN PRO_COD_PRINC_V VARCHAR(55),
    IN PRO_COD_AUX_V VARCHAR(55),
    IN PRO_DETALLE_EXTRA_V VARCHAR(155),
    IN PRO_STOCK_V INT,
    IN PRO_PRECIO_FABRICA_V DECIMAL(10,2),
    IN PRO_GANANCIA_V INT,
    IN PRO_PVP_V DECIMAL(10,2),
    IN PRO_ESTADO_V VARCHAR(15),
    IN PRO_TIPO_IVA_V INT
)
BEGIN
    UPDATE PRODUCTO SET
        FK_SUCURSAL = FK_SUCURSAL_V,
        FK_PROVEEDOR = FK_PROVEEDOR_V,
        PRO_NOMBRE = PRO_NOMBRE_V,
        PRO_DETALLE = PRO_DETALLE_V,
        PRO_CATEGORIA = PRO_CATEGORIA_V,
        PRO_COD_PRINC = PRO_COD_PRINC_V,
        PRO_COD_AUX = PRO_COD_AUX_V,
        PRO_DETALLE_EXTRA = PRO_DETALLE_EXTRA_V,
        PRO_STOCK = PRO_STOCK_V,
        PRO_PRECIO_FABRICA = PRO_PRECIO_FABRICA_V,
        PRO_GANANCIA = PRO_GANANCIA_V,
        PRO_PVP = PRO_PVP_V,
        PRO_ESTADO = PRO_ESTADO_V,
        PRO_TIPO_IVA = PRO_TIPO_IVA_V
    WHERE ID_PRODUCTO = ID_PRODUCTO_V;
END;

CREATE PROCEDURE SELECT_PRODUCTO_BUSCAR(IN pcriterio VARCHAR(20), IN pbusqueda VARCHAR(20))
BEGIN
	IF pcriterio = "PRO_NOMBRE" THEN
        SELECT 
            ID_PRODUCTO,
            PROVEEDOR.PRO_EMPRESA,
            SUCURSAL.SUC_NOMBRE,
            PRODUCTO.PRO_NOMBRE,
            PRO_DETALLE,
            PRO_CATEGORIA,
            PRO_COD_PRINC,
            PRO_COD_AUX,
            PRO_DETALLE_EXTRA,
            PRO_STOCK,
            PRO_PRECIO_FABRICA,
            PRO_GANANCIA,
            PRO_PVP,
            PRODUCTO.PRO_ESTADO,
            PRO_TIPO_IVA
        FROM PRODUCTO 
        INNER JOIN PROVEEDOR ON PRODUCTO.FK_PROVEEDOR = PROVEEDOR.ID_PROVEEDOR
        INNER JOIN SUCURSAL ON PRODUCTO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        WHERE PRODUCTO.PRO_NOMBRE  LIKE CONCAT("%",pbusqueda,"%");  
        
	ELSEIF pcriterio = "PRO_COD_PRINC" THEN
	    SELECT 
            ID_PRODUCTO,
            PROVEEDOR.PRO_EMPRESA,
            SUCURSAL.SUC_NOMBRE,
            PRODUCTO.PRO_NOMBRE,
            PRO_DETALLE,
            PRO_CATEGORIA,
            PRO_COD_PRINC,
            PRO_COD_AUX,
            PRO_DETALLE_EXTRA,
            PRO_STOCK,
            PRO_PRECIO_FABRICA,
            PRO_GANANCIA,
            PRO_PVP,
            PRODUCTO.PRO_ESTADO,
            PRO_TIPO_IVA
        FROM PRODUCTO 
        INNER JOIN PROVEEDOR ON PRODUCTO.FK_PROVEEDOR = PROVEEDOR.ID_PROVEEDOR
        INNER JOIN SUCURSAL ON PRODUCTO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        WHERE PRO_COD_PRINC  LIKE CONCAT("%",pbusqueda,"%");  
        
    ELSEIF pcriterio = "PRO_COD_AUX" THEN
	    SELECT 
            ID_PRODUCTO,
            PROVEEDOR.PRO_EMPRESA,
            SUCURSAL.SUC_NOMBRE,
            PRODUCTO.PRO_NOMBRE,
            PRO_DETALLE,
            PRO_CATEGORIA,
            PRO_COD_PRINC,
            PRO_COD_AUX,
            PRO_DETALLE_EXTRA,
            PRO_STOCK,
            PRO_PRECIO_FABRICA,
            PRO_GANANCIA,
            PRO_PVP,
            PRODUCTO.PRO_ESTADO,
            PRO_TIPO_IVA
        FROM PRODUCTO 
        INNER JOIN PROVEEDOR ON PRODUCTO.FK_PROVEEDOR = PROVEEDOR.ID_PROVEEDOR
        INNER JOIN SUCURSAL ON PRODUCTO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        WHERE PRO_COD_AUX LIKE CONCAT("%",pbusqueda,"%");   
        
    ELSEIF pcriterio = "PRO_PVP" THEN
	    SELECT 
            ID_PRODUCTO,
            PROVEEDOR.PRO_EMPRESA,
            SUCURSAL.SUC_NOMBRE,
            PRODUCTO.PRO_NOMBRE,
            PRO_DETALLE,
            PRO_CATEGORIA,
            PRO_COD_PRINC,
            PRO_COD_AUX,
            PRO_DETALLE_EXTRA,
            PRO_STOCK,
            PRO_PRECIO_FABRICA,
            PRO_GANANCIA,
            PRO_PVP,
            PRODUCTO.PRO_ESTADO,
            PRO_TIPO_IVA
        FROM PRODUCTO 
        INNER JOIN PROVEEDOR ON PRODUCTO.FK_PROVEEDOR = PROVEEDOR.ID_PROVEEDOR
        INNER JOIN SUCURSAL ON PRODUCTO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        WHERE PRO_PVP  LIKE CONCAT("%",pbusqueda,"%");   
                
    ELSEIF pcriterio = "PRO_CATEGORIA" THEN
	    SELECT 
            ID_PRODUCTO,
            PROVEEDOR.PRO_EMPRESA,
            SUCURSAL.SUC_NOMBRE,
            PRODUCTO.PRO_NOMBRE,
            PRO_DETALLE,
            PRO_CATEGORIA,
            PRO_COD_PRINC,
            PRO_COD_AUX,
            PRO_DETALLE_EXTRA,
            PRO_STOCK,
            PRO_PRECIO_FABRICA,
            PRO_GANANCIA,
            PRO_PVP,
            PRODUCTO.PRO_ESTADO,
            PRO_TIPO_IVA
        FROM PRODUCTO 
        INNER JOIN PROVEEDOR ON PRODUCTO.FK_PROVEEDOR = PROVEEDOR.ID_PROVEEDOR
        INNER JOIN SUCURSAL ON PRODUCTO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        WHERE PRO_CATEGORIA  LIKE CONCAT("%",pbusqueda,"%");           
        
	ELSEIF pcriterio = "PRO_ESTADO" THEN
	    SELECT 
            ID_PRODUCTO,
            PROVEEDOR.PRO_EMPRESA,
            SUCURSAL.SUC_NOMBRE,
            PRODUCTO.PRO_NOMBRE,
            PRO_DETALLE,
            PRO_CATEGORIA,
            PRO_COD_PRINC,
            PRO_COD_AUX,
            PRO_DETALLE_EXTRA,
            PRO_STOCK,
            PRO_PRECIO_FABRICA,
            PRO_GANANCIA,
            PRO_PVP,
            PRODUCTO.PRO_ESTADO,
            PRO_TIPO_IVA
        FROM PRODUCTO 
        INNER JOIN PROVEEDOR ON PRODUCTO.FK_PROVEEDOR = PROVEEDOR.ID_PROVEEDOR
        INNER JOIN SUCURSAL ON PRODUCTO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        WHERE PRODUCTO.PRO_ESTADO  LIKE CONCAT("%",pbusqueda,"%");  
	ELSE
		SELECT 
            ID_PRODUCTO,
            PROVEEDOR.PRO_EMPRESA,
            SUCURSAL.SUC_NOMBRE,
            PRODUCTO.PRO_NOMBRE,
            PRO_DETALLE,
            PRO_CATEGORIA,
            PRO_COD_PRINC,
            PRO_COD_AUX,
            PRO_DETALLE_EXTRA,
            PRO_STOCK,
            PRO_PRECIO_FABRICA,
            PRO_GANANCIA,
            PRO_PVP,
            PRODUCTO.PRO_ESTADO,
            PRO_TIPO_IVA
        FROM PRODUCTO 
        INNER JOIN PROVEEDOR ON PRODUCTO.FK_PROVEEDOR = PROVEEDOR.ID_PROVEEDOR
        INNER JOIN SUCURSAL ON PRODUCTO.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL;
	END IF; 
END;


-- =========================================================================
-- PROCEDIMIENTOS CLIENTES
-- =========================================================================
CREATE PROCEDURE SELECT_CLIENTES_ALL()
BEGIN
    SELECT 
        ID_CLIENTE,        
        CLI_NOMBRES,
        CLI_APELLIDOS,
        CLI_CEDULA,
        CLI_RUC,
        CLI_TELEFONO,
        CLI_DIRECCION,
        CLI_EMAIL,
        CLI_ESTADO
    FROM CLIENTE;
END;

CREATE PROCEDURE SELECT_CLIENTES_LINEA()
BEGIN
    SELECT 
        ID_CLIENTE,
        CLI_NOMBRES,
        CLI_APELLIDOS,
        CLI_CEDULA,
        CLI_RUC,
        CLI_TELEFONO,
        CLI_DIRECCION,
        CLI_EMAIL
    FROM CLIENTE
    WHERE CLI_ESTADO = 'EN LINEA';
END;

CREATE PROCEDURE INSERT_CLIENTES(
    IN CLI_NOMBRES_V VARCHAR(155),
    IN CLI_APELLIDOS_V VARCHAR(155),
    IN CLI_CEDULA_V VARCHAR(15),
    IN CLI_RUC_V VARCHAR(15),
    IN CLI_TELEFONO_V VARCHAR(15),
    IN CLI_DIRECCION_V VARCHAR(300),
    IN CLI_EMAIL_V VARCHAR(155),
    IN CLI_ESTADO_V VARCHAR(15),
    IN CLI_CREACION_V DATE
)
BEGIN
    INSERT INTO CLIENTE (
        CLI_NOMBRES,
        CLI_APELLIDOS,
        CLI_CEDULA,
        CLI_RUC,
        CLI_TELEFONO,
        CLI_DIRECCION,
        CLI_EMAIL,
        CLI_ESTADO,
        CLI_CREACION
    ) VALUES (
        CLI_NOMBRES_V,
        CLI_APELLIDOS_V,
        CLI_CEDULA_V,
        CLI_RUC_V,
        CLI_TELEFONO_V,
        CLI_DIRECCION_V,
        CLI_EMAIL_V,
        CLI_ESTADO_V,
        CLI_CREACION_V
    );
END;

CREATE PROCEDURE SELECT_CLIENTE_BUSCAR(IN pcriterio VARCHAR(20), IN pbusqueda VARCHAR(20))
BEGIN
	IF pcriterio = "CLI_NOMBRES" THEN
        SELECT
        ID_CLIENTE,
        CLI_NOMBRES,
        CLI_APELLIDOS,
        CLI_CEDULA,
        CLI_RUC,
        CLI_TELEFONO,
        CLI_DIRECCION,
        CLI_EMAIL,
        CLI_ESTADO 
        FROM CLIENTE
        WHERE CLI_NOMBRES  LIKE CONCAT("%",pbusqueda,"%");  
        
	ELSEIF pcriterio = "CLI_APELLIDOS" THEN
	    SELECT
        ID_CLIENTE,
        CLI_NOMBRES,
        CLI_APELLIDOS,
        CLI_CEDULA,
        CLI_RUC,
        CLI_TELEFONO,
        CLI_DIRECCION,
        CLI_EMAIL,
        CLI_ESTADO 
        FROM CLIENTE
        WHERE CLI_APELLIDOS  LIKE CONCAT("%",pbusqueda,"%");  
        
    ELSEIF pcriterio = "CLI_CEDULA" THEN
	    SELECT
        ID_CLIENTE,
        CLI_NOMBRES,
        CLI_APELLIDOS,
        CLI_CEDULA,
        CLI_RUC,
        CLI_TELEFONO,
        CLI_DIRECCION,
        CLI_EMAIL,
        CLI_ESTADO 
        FROM CLIENTE
        WHERE CLI_CEDULA  LIKE CONCAT("%",pbusqueda,"%");  
        
    ELSEIF pcriterio = "CLI_RUC" THEN
	    SELECT
        ID_CLIENTE,
        CLI_NOMBRES,
        CLI_APELLIDOS,
        CLI_CEDULA,
        CLI_RUC,
        CLI_TELEFONO,
        CLI_DIRECCION,
        CLI_EMAIL,
        CLI_ESTADO 
        FROM CLIENTE
        WHERE CLI_RUC  LIKE CONCAT("%",pbusqueda,"%");  
        
    ELSEIF pcriterio = "CLI_DIRECCION" THEN
	    SELECT
        ID_CLIENTE,
        CLI_NOMBRES,
        CLI_APELLIDOS,
        CLI_CEDULA,
        CLI_RUC,
        CLI_TELEFONO,
        CLI_DIRECCION,
        CLI_EMAIL,
        CLI_ESTADO 
        FROM CLIENTE
        WHERE CLI_DIRECCION  LIKE CONCAT("%",pbusqueda,"%"); 

	ELSEIF pcriterio = "CLI_ESTADO" THEN
	    SELECT
        ID_CLIENTE,
        CLI_NOMBRES,
        CLI_APELLIDOS,
        CLI_CEDULA,
        CLI_RUC,
        CLI_TELEFONO,
        CLI_DIRECCION,
        CLI_EMAIL,
        CLI_ESTADO 
        FROM CLIENTE
        WHERE CLI_ESTADO  LIKE CONCAT("%",pbusqueda,"%"); 
	ELSE
		SELECT
        ID_CLIENTE,
        CLI_NOMBRES,
        CLI_APELLIDOS,
        CLI_CEDULA,
        CLI_RUC,
        CLI_TELEFONO,
        CLI_DIRECCION,
        CLI_EMAIL,
        CLI_ESTADO 
        FROM CLIENTE;
	END IF; 
END;

CREATE PROCEDURE UPDATE_CLIENTE(
    IN ID_CLIENTE_V INT,
    IN CLI_NOMBRES_V VARCHAR(155),
    IN CLI_APELLIDOS_V VARCHAR(155),
    IN CLI_CEDULA_V VARCHAR(15),
    IN CLI_RUC_V VARCHAR(15),
    IN CLI_TELEFONO_V VARCHAR(15),
    IN CLI_DIRECCION_V VARCHAR(300),
    IN CLI_EMAIL_V VARCHAR(155),
    IN CLI_ESTADO_V VARCHAR(15)
)
BEGIN
    UPDATE CLIENTE SET
    CLI_NOMBRES = CLI_NOMBRES_V,
    CLI_APELLIDOS = CLI_APELLIDOS_V,
    CLI_CEDULA = CLI_CEDULA_V,
    CLI_RUC = CLI_RUC_V,
    CLI_TELEFONO = CLI_TELEFONO_V,
    CLI_DIRECCION = CLI_DIRECCION_V,
    CLI_EMAIL = CLI_EMAIL_V,
    CLI_ESTADO = CLI_ESTADO_V
    WHERE ID_CLIENTE = ID_CLIENTE_V;
END;

CREATE PROCEDURE DELETE_CLIENTE(
    IN ID_CLIENTE_V INT
)
BEGIN
    DELETE FROM CLIENTE WHERE ID_CLIENTE = ID_CLIENTE_V;
END;

-- =========================================================================
-- PROCEDIMIENTOS PROVEEDORES
-- =========================================================================
CREATE PROCEDURE SELECT_PROVEEDOR()
BEGIN
    SELECT 
        ID_PROVEEDOR,
        SUCURSAL.SUC_NOMBRE,
        PRO_EMPRESA,
        PRO_CONTACTO,
        PRO_RUC,
        PRO_TELEFONO,
        PRO_EMAIL,
        PRO_DIRECCION,
        PRO_WEB,
        PRO_ESTADO
    FROM PROVEEDOR 
    INNER JOIN SUCURSAL ON PROVEEDOR.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL;
END;

CREATE PROCEDURE SELECT_PROVEEDOR_ID(
    IN PRO_EMPRESA_V VARCHAR(155)
)
BEGIN
    SELECT ID_PROVEEDOR FROM PROVEEDOR WHERE PRO_EMPRESA = PRO_EMPRESA_V;
END;

CREATE PROCEDURE INSERT_PROVEEDOR(
    IN FK_SUCURSAL_V INT,
    IN PRO_EMPRESA_V VARCHAR(155),
    IN PRO_CONTACTO_V VARCHAR(255),
    IN PRO_RUC_V VARCHAR(15),
    IN PRO_TELEFONO_V VARCHAR(15),IN PRO_EMAIL_V VARCHAR(255),
    IN PRO_DIRECCION_V VARCHAR(255),
    IN PRO_WEB_V VARCHAR(255),
    IN PRO_CREACION_V DATE,
    IN PRO_ESTADO_V VARCHAR(15)
)
BEGIN
    INSERT INTO PROVEEDOR (
        FK_SUCURSAL,
        PRO_EMPRESA,
        PRO_CONTACTO,
        PRO_RUC,
        PRO_TELEFONO,
        PRO_EMAIL,
        PRO_DIRECCION,
        PRO_WEB,
        PRO_CREACION,
        PRO_ESTADO
    ) VALUES (
        FK_SUCURSAL_V,
        PRO_EMPRESA_V,
        PRO_CONTACTO_V,
        PRO_RUC_V,
        PRO_TELEFONO_V,
        PRO_EMAIL_V,
        PRO_DIRECCION_V,
        PRO_WEB_V,
        PRO_CREACION_V,
        PRO_ESTADO_V
    );
END;

CREATE PROCEDURE SELECT_PROVEEDOR_BUSCAR(IN pcriterio VARCHAR(20), IN pbusqueda VARCHAR(20))
BEGIN
	IF pcriterio = "PRO_EMPRESA" THEN
        SELECT
        ID_PROVEEDOR,
        SUCURSAL.SUC_NOMBRE,
        PRO_EMPRESA,
        PRO_CONTACTO,
        PRO_RUC,
        PRO_TELEFONO,
        PRO_EMAIL,
        PRO_DIRECCION,
        PRO_WEB,
        PROVEEDOR.PRO_ESTADO
        FROM PROVEEDOR
        INNER JOIN SUCURSAL ON PROVEEDOR.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        WHERE PRO_EMPRESA  LIKE CONCAT("%",pbusqueda,"%");  
        
	ELSEIF pcriterio = "PRO_CONTACTO" THEN
	    SELECT
        ID_PROVEEDOR,
        SUCURSAL.SUC_NOMBRE,
        PRO_EMPRESA,
        PRO_CONTACTO,
        PRO_RUC,
        PRO_TELEFONO,
        PRO_EMAIL,
        PRO_DIRECCION,
        PRO_WEB,
        PROVEEDOR.PRO_ESTADO
        FROM PROVEEDOR
        INNER JOIN SUCURSAL ON PROVEEDOR.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        WHERE PRO_CONTACTO  LIKE CONCAT("%",pbusqueda,"%");    
        
    ELSEIF pcriterio = "PRO_RUC" THEN
	    SELECT
        ID_PROVEEDOR,
        SUCURSAL.SUC_NOMBRE,
        PRO_EMPRESA,
        PRO_CONTACTO,
        PRO_RUC,
        PRO_TELEFONO,
        PRO_EMAIL,
        PRO_DIRECCION,
        PRO_WEB,
        PROVEEDOR.PRO_ESTADO
        FROM PROVEEDOR
        INNER JOIN SUCURSAL ON PROVEEDOR.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        WHERE PRO_RUC  LIKE CONCAT("%",pbusqueda,"%");   
        
    ELSEIF pcriterio = "PRO_DIRECCION" THEN
	    SELECT
        ID_PROVEEDOR,
        SUCURSAL.SUC_NOMBRE,
        PRO_EMPRESA,
        PRO_CONTACTO,
        PRO_RUC,
        PRO_TELEFONO,
        PRO_EMAIL,
        PRO_DIRECCION,
        PRO_WEB,
        PROVEEDOR.PRO_ESTADO
        FROM PROVEEDOR
        INNER JOIN SUCURSAL ON PROVEEDOR.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        WHERE PRO_DIRECCION  LIKE CONCAT("%",pbusqueda,"%");  

	ELSEIF pcriterio = "PRO_ESTADO" THEN
	    SELECT
        ID_PROVEEDOR,
        SUCURSAL.SUC_NOMBRE,
        PRO_EMPRESA,
        PRO_CONTACTO,
        PRO_RUC,
        PRO_TELEFONO,
        PRO_EMAIL,
        PRO_DIRECCION,
        PRO_WEB,
        PROVEEDOR.PRO_ESTADO
        FROM PROVEEDOR
        INNER JOIN SUCURSAL ON PROVEEDOR.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
        WHERE PRO_ESTADO  LIKE CONCAT("%",pbusqueda,"%");  
	ELSE
		SELECT
        ID_PROVEEDOR,
        SUCURSAL.SUC_NOMBRE,
        PRO_EMPRESA,
        PRO_CONTACTO,
        PRO_RUC,
        PRO_TELEFONO,
        PRO_EMAIL,
        PRO_DIRECCION,
        PRO_WEB,
        PROVEEDOR.PRO_ESTADO
        FROM PROVEEDOR
        INNER JOIN SUCURSAL ON PROVEEDOR.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL;
	END IF; 
END;

CREATE PROCEDURE UPDATE_PROVEEDOR(
    IN ID_PROVEEDOR_V INT,
    IN FK_SUCURSAL_V INT,
    IN PRO_EMPRESA_V VARCHAR(255),
    IN PRO_CONTACTO_V VARCHAR(255),
    IN PRO_RUC_V VARCHAR(15),
    IN PRO_TELEFONO_V VARCHAR(15),
    IN PRO_EMAIL_V VARCHAR(255),
    IN PRO_DIRECCION_V VARCHAR(255),
    IN PRO_WEB_V VARCHAR(255),
    IN PRO_ESTADO_V VARCHAR(15)
)
BEGIN
    UPDATE PROVEEDOR SET 
        FK_SUCURSAL = FK_SUCURSAL_V,
        PRO_EMPRESA = PRO_EMPRESA_V,
        PRO_CONTACTO = PRO_CONTACTO_V,
        PRO_RUC = PRO_RUC_V,
        PRO_TELEFONO = PRO_TELEFONO_V,
        PRO_EMAIL = PRO_EMAIL_V,
        PRO_DIRECCION = PRO_DIRECCION_V,
        PRO_WEB = PRO_WEB_V,
        PRO_ESTADO = PRO_ESTADO_V
    WHERE ID_PROVEEDOR = ID_PROVEEDOR_V;
END;

CREATE PROCEDURE DELETE_PROVEEDOR(
    IN ID_PROVEEDOR_V INT
)
BEGIN
    DELETE FROM PROVEEDOR WHERE ID_PROVEEDOR = ID_PROVEEDOR_V;
END;


-- =========================================================================
-- PROCEDIMIENTOS FACTURAS
-- =========================================================================
CREATE PROCEDURE SELECT_FACTURA()
BEGIN
    SELECT 
        ID_FACTURA,
        EMPLEADO.EMP_NOMBRES,
        EMPLEADO.EMP_APELLIDOS,
        CLIENTE.CLI_NOMBRES,
        CLIENTE.CLI_APELLIDOS,
        SUCURSAL.SUC_NOMBRE,
        FAC_FECHA,
        FAC_HORA,
        FAC_CODIGO,
        FAC_COD_AUT,
        FAC_RUTA,
        FAC_ESTADO
    FROM FACTURA
        INNER JOIN EMPLEADO ON FACTURA.FK_EMPLEADO = EMPLEADO.ID_EMPLEADO
        INNER JOIN CLIENTE ON FACTURA.FK_CLIENTE = CLIENTE.ID_CLIENTE
        INNER JOIN SUCURSAL ON FACTURA.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL;
END;

CREATE PROCEDURE SELECT_FACTURA_ID(
    IN ID_FACTURA_V INT
)
BEGIN
    SELECT 
        ID_FACTURA,
        EMPLEADO.EMP_NOMBRES,
        EMPLEADO.EMP_APELLIDOS,
        CLIENTE.CLI_NOMBRES,
        CLIENTE.CLI_APELLIDOS,
        SUCURSAL.SUC_NOMBRE,
        FAC_FECHA,
        FAC_HORA,
        FAC_CODIGO,
        FAC_COD_AUT,
        FAC_RUTA,
        FAC_ESTADO
    FROM FACTURA
        INNER JOIN EMPLEADO ON FACTURA.FK_EMPLEADO = EMPLEADO.ID_EMPLEADO
        INNER JOIN CLIENTE ON FACTURA.FK_CLIENTE = CLIENTE.ID_CLIENTE
        INNER JOIN SUCURSAL ON FACTURA.FK_SUCURSAL = SUCURSAL.ID_SUCURSAL
    WHERE ID_FACTURA = ID_FACTURA_V;
END;

CREATE PROCEDURE INSERT_FACTURA(
    IN FK_EMPLEADO_V INT,
    IN FK_CLIENTE_V INT,
    IN FK_SUCURSAL_V INT,
    IN FAC_FECHA_V DATE,
    IN FAC_HORA_V TIME,
    IN FAC_CODIGO_V VARCHAR(55),
    IN FAC_COD_AUT_V VARCHAR(55),
    IN FAC_RUTA_V VARCHAR(300),
    IN FAC_ESTADO_V VARCHAR(55)
)
BEGIN
    INSERT INTO FACTURA
    (
        FK_EMPLEADO,
        FK_CLIENTE,
        FK_SUCURSAL,
        FAC_FECHA,
        FAC_HORA,
        FAC_CODIGO,
        FAC_COD_AUT,
        FAC_RUTA,
        FAC_ESTADO
    ) VALUES (
        FK_EMPLEADO_V,
        FK_CLIENTE_V,
        FK_SUCURSAL_V,
        FAC_FECHA_V,
        FAC_HORA_V,
        FAC_CODIGO_V,
        FAC_COD_AUT_V,
        FAC_RUTA_V,
        FAC_ESTADO_V
    );
END;

CREATE PROCEDURE  SELECT_FACTURA_LAST()
BEGIN
    SELECT MAX(ID_FACTURA) FROM FACTURA;
END;
CREATE PROCEDURE DELETE_FACTURA(
    IN ID_FACTURA_V INT
)
BEGIN
    DELETE FROM FACTURA WHERE ID_FACTURA = ID_FACTURA_V;
END;
-- =========================================================================
-- PROCEDIMIENTOS FACTURAS DETALLE
-- =========================================================================
CREATE PROCEDURE INSERT_DETALLE(
    IN FK_FACTURA_V INT,
    IN FK_PRODUCTO_V INT,
    IN DET_CANTIDAD_V INT,
    IN DET_PRECIO_V DECIMAL(10,3),
    IN DET_TOTAL_V DECIMAL(10,3)
)
BEGIN
    INSERT INTO FACTURA_DESCRIPCION (
        FK_FACTURA,
        FK_PRODUCTO,
        DET_CANTIDAD,
        DET_PRECIO,
        DET_TOTAL
    ) VALUES (
        FK_FACTURA_V,
        FK_PRODUCTO_V,
        DET_CANTIDAD_V,
        DET_PRECIO_V,
        DET_TOTAL_V
    );
END;

CREATE PROCEDURE DELETE_DETALLE(
    IN FK_FACTURA_V INT
)
BEGIN
    DELETE FROM FACTURA_DESCRIPCION WHERE FK_FACTURA = FK_FACTURA_V;
END;

-- =========================================================================
-- PROCEDIMIENTOS FACTURAS TOTALIDAD
-- =========================================================================
CREATE PROCEDURE INSERT_FACTURA_TOTALIDAD(
    IN FK_FACTURA_V INT,
    IN FAC_SUB_0_V DECIMAL(10,3),
    IN FAC_SUB_12_V DECIMAL(10,3),
    IN FAC_OBJ_IVA_V DECIMAL(10,3),
    IN FAC_EXC_IVA_V DECIMAL(10,3),
    IN FAC_DESCUENTO_V INT,
    IN FAC_IVA_12_V DECIMAL(10,3),
    IN FAC_TOTAL_PAGAR_V DECIMAL(10,3)
)
BEGIN
    INSERT INTO FACTURA_TOTALIDAD (
        FK_FACTURA,
        FAC_SUB_0,
        FAC_SUB_12,
        FAC_OBJ_IVA,
        FAC_EXC_IVA,
        FAC_DESCUENTO,
        FAC_IVA_12,
        FAC_TOTAL_PAGAR
    ) VALUES (
        FK_FACTURA_V,
        FAC_SUB_0_V,
        FAC_SUB_12_V,
        FAC_OBJ_IVA_V,
        FAC_EXC_IVA_V,
        FAC_DESCUENTO_V,
        FAC_IVA_12_V,
        FAC_TOTAL_PAGAR_V
    );
END;

CREATE PROCEDURE DELETE_FACTURA_TOTALIDAD(
    IN FK_FACTURA_V INT
)
BEGIN
    DELETE FROM FACTURA_TOTALIDAD WHERE FK_FACTURA = FK_FACTURA_V;
END;